# -*- coding: utf-8 -*-
"""Laboratorio Taller 3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AGMMXeTw0z_-aEXgrHYkhBCuP8w4f6so

# Práctica: Clasificación

Integrantes: Dana Acosta, Santiago Alvarez, Lucas Garcia

Para el conjunto de Social network ads realice:

*   Realice un analisis exploratorio
*   KNN, lda y pca
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.colors import ListedColormap
import matplotlib.patches as mpatches
import seaborn as sb
import statsmodels.formula.api as smf
import statsmodels.api as sm

df=pd.read_csv('Social_Network_Ads.csv')
df.head()

df.describe()

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix

df.hist()
plt.show()

X = df[['Age','EstimatedSalary']]
y = df['Purchased']
 
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0)
scaler = MinMaxScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

X_train

"""# KNN"""

n_neighbors = 2

knn = KNeighborsClassifier(n_neighbors)
knn.fit(X_train, y_train)
print('Accuracy of K-NN classifier on training set: {:.2f}'
     .format(knn.score(X_train, y_train)))
print('Accuracy of K-NN classifier on test set: {:.2f}'
     .format(knn.score(X_test, y_test)))

pred = knn.predict(X_test)
print(confusion_matrix(y_test, pred))
print(classification_report(y_test, pred))

"""# LDA"""

formula = 'Purchased ~ Age + EstimatedSalary'

model = smf.glm(formula = formula, data=df, family=sm.families.Binomial())
result = model.fit()
print(result.summary())

print("Coefficeients")
print(result.params)
print()
print("p-Values")
print(result.pvalues)
print()
print("Dependent variables")
print(result.model.endog_names)

predictions = result.predict()
print(predictions[0:10])